---
title: "Bulle d'R n°1 : Bonnes pratiques à ETTIS"
date: "2023-06-06"
date-format: long
lang: fr  
author:
  - name: Sandrine LYSER
    orcid: 0000-0001-6820-0672
    email: sandrine.lyser@inrae.fr
  - name: David CARAYON
    email: david.carayon@inrae.fr
    orcid: 0000-0003-0217-2175
format: 
  inrae-revealjs:
    footer: "Bulle d'R n°1 | Bonnes pratiques"
    # theme: [custom.scss]
    transition: none
revealjs-plugins:
  - pointer
from: markdown+emoji
---

## Présentation : Bulle d'R {background-image="img/logo-bulledr.png" background-size="150px" background-position="top 40px right 80px"} 

<br> 

::: {.incremental}
- Rendez-vous mensuel pour échanger autour du logiciel R (et de RStudio) et ses multiples utilisations 
- Tous les 1er mardi de chaque mois à 9h en salle Estuaire
- Pas des sessions de formation, mais plutôt un format questions /réponses
- Ouvert à tous les niveaux, pas de question bête :wink:
- Chat de discussion dédié sur Mattermost : [https://team.forgemia.inra.fr/ur-ettis/channels/bulledr](https://team.forgemia.inra.fr/ur-ettis/channels/bulledr){target="_blank"}

:::


# Introduction {.inverse}

## R -  Rstudio

Cf. Présentation TWIX disponible à ce lien :

<br>
<br>

<center>

{{< fa globe >}} [https://statire.github.io/bulledr/00-TWIX/TWIX_2023_06_01](https://statire.github.io/bulledr/00-TWIX/TWIX_2023_06_01){target="_blank"} {{< fa globe >}}

</center>

# Travailler en projets {.inverse}

## Créer un projet sous RStudio {background-image="img/rstudio-logo.png" background-size="100px" background-position="top 40px right 80px"} 
À partir de l'icône dédiée en haut à droite de RStudio

![](./img/screenshot_RStudio_01NewProject.png){fig-align="center" width="70%"} 


## Créer un projet sous RStudio {background-image="img/rstudio-logo.png" background-size="100px" background-position="top 40px right 80px"}

Sélectionner l'option "*New project*", puis l'option "*New Directory*" et enfin "*Empty Project*"  

![](./img/screenshot_RStudio_02CreateProject.png){width="32%"} ![](./img/screenshot_RStudio_03ProjectType.png){width="32%"} ![](./img/screenshot_RStudio_04ProjectDirectory.png){width="32%"}

## Exemples d'arborescence

**Exemples de structurations**  
(chacun s'organisera de la façon qu'il juge la plus adaptée à ses usages)  

![](./img/screenshot_RStudio_05ProjectStructureMini.png){width="48%"} ![](./img/screenshot_RStudio_05ProjectStructureOptim.png){width="48%"}


::: {.callout-note}
## A noter
Le plus important, ce sont les **données initiales** et les **scripts de traitements**.
:::

##  Coup de pouce : Le package [{InraeThemes}](https://davidcarayon.github.io/InraeThemes/) {background-image="img/logo_hex.png" background-size="100px" background-position="top 40px right 80px"}

<br>
<br>

```r
# install.packages("remotes")
remotes::install_github("davidcarayon/InraeThemes")
```

<br>


:::: {.columns}

::: {.column width="50%"}

![](img/cap_project_IT.png){fig-align="center" width="70%"}
:::

::: {.column width="50%"}
![](img/project_IT){fig-align="center" width="40%"}
:::

::::

# Importer ses données {.inverse}

## Importer divers types de données

**Quels types de données peuvent être importés ?** 

- Données dans les formats "plats" ou formats délimités (.csv, .txt)
- Données issues d'Excel ou d'autres logiciels de statistique (Stata, SPSS, etc.)
- Données stockées dans des bases de données relationnelles  

::: {.callout-tip appearance="minimal"}
## Bonne pratique
**Bien étudier son jeu de données à importer, en se posant les questions suivantes :**

1. La première ligne contient-elle le nom des variables ?  
2. Quel est le séparateur des colonnes?  
3. Quel est le caractère utilisé pour indiquer les décimales ? Le point (à l'anglo-saxonne) ou la virgule (à la française) ?  
4. Les valeurs textuelles sont-elles encadrées par des guillemets ? Si oui, s'agit-il de guillemets simples (`’`) ou de guillemets doubles (`"`) ?  
5. Y a-t-il des valeurs manquantes ? Si oui comment sont-elles indiquées ? 
:::


## Comment importer les différents fichiers ?

| Type     | Base R                 | Tidyverse                                   | Séparateur de colonnes | Séparateur décimal |
|:---------|:-----------------------|:--------------------------------------------|:-----------------------|:-------------------|
| Délimité | `read.csv()`           | `readr::read_csv()`                         | `,`                    | `.`                |
|          | `read.csv2()`          | `readr::read_csv2()`                        | `;`                    | `,`                |
|          | `read.table()`         | `readr::read_table()`                       |                        | `.`                |
|          | `read.delim()`         | `readr::read_delim()`                       | `\t`                   | `.`                |
|          | `read.delim2()`        | `readr::read_delim2()`                      | `\t`                   | `,`                |
| Excel    | `xlsx::read.xlsx()`    | `readxl::read_excel()`                      |                        |                    |
| SPSS     | `foreign::read.spss()` | `haven::read_spss()` ou `haven::read_sav()` |                        |                    |
| Stata    | `foreign::read.dta()`  | `haven::read_stata()`                       |                        |                    |
| SAS      | `foreign::read.ssd()`  | `haven::read_sas()`                         |                        |                    |
| dBase    | `foreign::read.dbf()`  | \-                                          |                        |                    |
	

## Le concept de données `tidy`

:::: {.columns}

::: {.column width="50%"}

**Jeu de données "rangé"** :

- chaque variable est dans une colonne
- chaque observation est dans une ligne
- chaque valeur est dans une cellule
:::

::: {.column width="50%"}
![](img/screenshot_TidyData.png)

Source : Wickham & Grolemund (2017)
[R for Data Sciences: Visualize, Model, Transform, Tidy and Import Data](https://r4ds.had.co.nz){target="_blank"}
:::

::::

::: {.callout-caution}
Ces règles ne sont pas toujours respectées :

- en-têtes de colonnes ne sont pas des noms mais des valeurs
- plusieurs variables stockées dans une colonne
- variables stockées dans les lignes et les colonnes
- plusieurs types d'observations stockés dans le même tableau, etc.
:::


## "Ranger" ses données

**Solution pour ranger ses données = les verbes de `tidyr` :**

- `pivot_longer()` : transformer des colonnes en lignes
- `pivot_wider()` : transformer des lignes en colonnes
- `separate()` : séparer une colonne en plusieurs colonnes
- `separate_rows()` : séparer une colonne en plusieurs lignes
- `unite()` : regrouper plusieurs colonnes en une seule
- `extract()` : créer de nouvelles colonnes à partir d'une colonne de texte
- `complete()` : compléter des combinaisons de variables manquantes


## Besoin d'examiner rapidement vos données dans Excel ? 

Utilisez l'addin `viewxl` pour exporter interactivement des *data frame* de l'environnement global vers Excel

:::: {.columns}

::: {.column width="50%"}

- avec la fonction `view_in_excel`  
![](img/viewxl.png)
:::

::: {.column width="50%"}
- dans la console :

```r
viewxl::view_in_xl(diamonds)
```
![](img/excel_danger.jpeg)
:::

::::


# Nommer ses données {.inverse}

## Conventions de nommage
- **`allowercase`** : tout en minuscule, sans séparateur  
- **`period.separated`** : tout en minuscule, mots séparés par des points  
- **`underscore_separated`** : tout en minuscule, mots séparés par un *underscore* (`_`)  
- **`lowerCamelCase`** : première lettre des mots en majuscule, à l'exception du premier mot ; et si nom simple, tout en minuscule  
- **`UpperCamelCase`** : première lettre des mots en majuscule, y compris le premier et même lorsque le nom est composé d'un seul mot

::: {.callout-tip appearance="minimal"}
## Bonne pratique
Possibilité de mixer les conventions mais garder une cohérence afin de faciliter la compréhension des fichiers et du code
:::

::: {.callout-caution}
**R est sensible à la casse** ce qui signifie que `variable` et `Variable` sont deux objets différents. 
:::


## Nommer les fichiers et les objets

**Pour les fichiers**, la structure est la suivante : `numero -- nom -- millesime`.  
Pas de symboles spéciaux dans le nom du fichier (`-.,;:\/$`^`, caractères accentués, etc.)  

*Exemple : `01_import_donnees_20230606.R`*

**Pour les variables**, il est recommandé d'utiliser un **nom** 

*Exemple : `temperature_max`*

**Pour les fonctions**, il est recommandé d'utiliser un **verbe**

*Exemple : `create.map` serait une fonction qui permettrait de créer une carte*


::: {.callout-tip appearance="minimal"}
## Bonne pratique
Pour les variables, comme pour les fonctions :  

* ne pas utiliser `T` ou `F` pour nommer des variables (ce sont les abréviations de `TRUE` et `FALSE`)
* ne pas utiliser de noms qui sont déjà des fonctions de R
:::

**Une aide pour écrire les scripts de façon _cohérente_**  {{< fa globe >}} [Tidyverse Style Guide](https://style.tidyverse.org/index.html){target="_blank"}  


# Gestion des packages {.inverse}

## Préambule : Version de R

Les packages R peuvent dépendre d'une version spécifique de R (ou version minimale)

![](img/vers_R.png)

::: {.fragment}
Les nouvelles versions de R peuvent apporter des corrections, éliminer les bugs... Il est donc intéressant de faire les MAJ "majeures" de printemps : 4.2.x $\rightarrow$ 4.3.x 
:::

::: {.fragment}
::: {.callout-caution}
## Les Breaking Changes
Certaines versions de R apportent des **breaking changes** qui peuvent casser le fonctionnement de code fonctionnant sur des versions précédentes (ex : `stringAsFactor = FALSE` au lieu de `TRUE` avant la version 4.0). 

A l'inverse, des nouvelles fonctionnalités ne vont marcher que sur des versions récentes (ex : le pipe `|>` à partir de R 4.1.0)

:warning: Toujours intégrer la version de R utilisée dans ses analyses / publications :warning:
:::
:::

## Rappels sur le fonctionnement des packages

1) On **installe** le package

```r
install.packages("remotes")
```
Cela place les fonctions du package sur votre PC.

::: {.callout-tip appearance="minimal" icon=false}
Analogie : on **achète** un livre :notebook: pour le mettre dans sa bibliothèque :books:
:::

::: {.fragment}

2)  On **charge** le package

```r
library(remotes)
```
On évite au lancement de R de lancer *tous* les packages installés, il faut donc indiquer lors de chaque session les packages à charger

::: {.callout-tip appearance="minimal" icon=false}
Analogie : on **sort** le livre de la bibliothèque et on l'ouvre pour utiliser son contenu :book:
:::
:::

## Alternative au `library`, le préfixage

<br>

La notation

```r
dplyr::filter(iris, Species == "setosa")
```

Peut remplacer le code

```r
library(dplyr)
filter(iris, Species == "setosa")
```

:::{.fragment}

::: {.callout-tip}
## Trois avantages
* Eviter les conflits si 2 packages ont une fonction au même nom (ex : `filter()` existe également dans le package `{stats}`)
* Identifier quelle fonction provient de quel package
* Ne pas charger tout un package pour une seule fonction
:::
:::

## Quelques mises en garde

* Les fonctions provenant de packages tels que ceux  du `tidyverse` proposent énormément de fonctionnalités pratiques, utiles, fonctionnelles par rapport aux fonctionnalités *classiques* de R
* **MAIS** elles ont un cycle de développement très dynamique pouvant mener à des fonctions rapidement `deprecated` ou `superseded`

![](img/lifecycle.png){fig-align="center" width="50%"}

::: {.fragment}
::: {.callout-tip appearance="minimal"}
## Bonne pratique
* Privilégier, lorsque c'est possible, les fonctions/packages les plus **stables** possible
:::
:::

##  Structuration des scripts (S)
	1) Esquisse, FactoShiny... Reproductibilité => Stocker le code dans 1 script quand même
	2) Packages + session_info pour les versions
	3) Créer des sections : CTRL + MAJ + R (+ addin)
	4) Commentaires
	5) Aller plus loin : CompileReport et/ou Programmation lettrée (Rmd) => Session dédiée (si interêt)

##  L'export (hors Rmd) (S)
	1) Les plots (base + ggplot)
	2) Les tableaux :  XLSX / CSV
	3) Packages export auto : dataExplorer

#  Quelques packages conseils {.inverse}

## [{questionr}](https://juba.github.io/questionr/index.html){target="_blank"} : Outils de traitement de données d'enquêtes

<br>

```{r, echo = TRUE}
library(questionr)
data(hdv2003)
freq(hdv2003$qualif, cum = TRUE, total = TRUE, sort ="dec")
```

<!-- ![](img/questionr.png){fig-align="center" width="80%"} -->

## [{skimr}](https://docs.ropensci.org/skimr/){target="_blank"} : Un summary sous stéroïdes :muscle: {background-image="img/logo_skimr.png" background-size="100px" background-position="top 40px right 80px"} 

:::: {.columns}

::: {.column width="40%"}
```r
library(skimr)
skimr::skim(mtcars)
```
:::

::: {.column width="60%"}
:::

::::



![](img/skimr.png)

## [{easystats}](https://easystats.github.io/easystats/){target="_blank"} : Les statistiques "faciles" :star_struck: {background-image="img/easystats.png" background-size="200px" background-position="top 40px right 80px"} 

<br>

:::: {.columns}

::: {.column width="60%"}
![](img/performance.png){fig-align="center" width="70%"}
:::

::: {.column width="40%"}
<br>
![](img/figure_workflow.png){fig-align="center" width="70%"}
![](img/report_easy.png){fig-align="center" width="100%"}
:::

::::



## [{ggstatsplot}](https://indrajeetpatil.github.io/ggstatsplot/){target="_blank"} : Combiner statistiques et représentations graphiques {background-image="img/ggstatsplots_logo.png" background-size="100px" background-position="top 40px right 80px"} 


<br>

```r
library(ggstatsplots)
```

<br>

:::: {.columns}

::: {.column width="50%"}
![](img/ggstatsplot.png){fig-align="center" width="100%"}
:::

::: {.column width="50%"}
![](img/ggscatter.png){fig-align="center" width="80%"}
:::

::::

## Analyses factorielles

**Deux grandes écoles** 

:::: {.columns}

::: {.column width="40%"}
::: {.fragment}
```r
library(ade4)
library(adegraphics)
```

![](img/ade4.png)


:::
:::

::: {.column width="60%"}
::: {.fragment}
```r
library(FactoMineR)
library(factoextra)
```

![](img/facto.png) 

{{< fa caret-right >}} :trophy: en général privilégié

:::
:::

::::


## [{PCAmixdata}](https://cran.r-project.org/web/packages/PCAmixdata/vignettes/PCAmixdata.html){target="_blank"} : L'analyse mixte

> Chavent, M., Kuentz-Simonet, V., Labenne, A., & Saracco, J. (2014). Multivariate analysis of mixed data: The R package PCAmixdata. arXiv preprint arXiv:1411.4911.

![](img/pcamix.png){fig-align="center" width="40%"}

# Pour aller (beaucoup) plus loin {.inverse}

## Quarto

- Quarto est le *successeur* de Rmarkdown qui se veut plus généraliste
- :warning: Rmarkdown n'est pas mort pour autant ! 

:::: {.columns}

::: {.column width="50%"}
![Rmarkdown : centré sur R](img/r-knitr-rmd.jpeg)
:::

::: {.column width="50%"}
![Quarto : Approche plus généraliste](img/quarto-all.jpeg)
:::

::::

## Hello Quarto

![](img/rstudio-hello.png){width="80%"}

Plus d'informations sur {{< fa globe >}} [quarto.org](https://quarto.org){target="_blank"}

## Renv : Figer ses versions de packages R {background-image="img/renv_logo.svg" background-size="200px" background-position="top 40px right 80px"} 

<br>

:::: {.columns}

::: {.column width="50%"}
**Sans {renv}**

![](img/shared-library.svg)

Les packages sont communs pour tous les projets

:::

::: {.column width="50%"}
**Avec {renv}**

![](img/renv.png)

Le projet 1 peut utiliser dplyr 1.0.2 et le projet 2 dplyr 0.8.2
:::

::::

## Git {background-image="img/logo_git.png" background-size="200px" background-position="top 40px right 80px"} 

:::: {.columns}

::: {.column width="50%"}
![](img/finaldoc.png){fig-align="center" width="90%"}
:::

::: {.column width="50%"}
![](img/gitworkflow.png){fig-align="center" width="90%"}

**Pourquoi utiliser Git ?**

* Garder en mémoire chaque modification de chaque fichier, pourquoi elle a eu lieu, quand et par qui

* Faciliter le développement collaboratif : fusion des différentes modifications

* Revenir aux versions précédentes (+ sauvegarde du travail)



:::

::::

# Conclusion {.inverse}

## Ne soyons pas trop exigeants...

:::: {.columns}

::: {.column width="40%"}
![](img/usingr.jpeg){width="100%" fig-align="center"}

[reddit.com/r/rstatsmemes/](https://www.reddit.com/r/rstatsmemes/){target="_blank"}

:::

::: {.column width="60%"}
![](img/mess.png){width="100%" fig-align="center"}
![](img/packages_mess.jpeg){width="60%" fig-align="center"}
:::

::::

## Merci ! Des questions ?

::: {.callout-note appearance="minimal"}

###### Les liens
{{< fa brands github >}}   [https://github.com/statire/bulledr](https://github.com/statire/bulledr){target="_blank"}

{{< fa brands github >}}   [https://github.com/davidcarayon/InraeThemes](https://github.com/davidcarayon/InraeThemes){target="_blank"}

{{< fa comment-dots >}}   [https://team.forgemia.inra.fr/ur-ettis/channels/bulledr](https://team.forgemia.inra.fr/ur-ettis/channels/bulledr){target="_blank"}

**Les Packages**

{{< fa box >}} [questionr](https://juba.github.io/questionr/index.html) |
{{< fa box >}} [skimr](https://docs.ropensci.org/skimr/){target="_blank"} |
{{< fa box >}} [easystats](https://easystats.github.io/easystats/){target="_blank"} |
{{< fa box >}} [ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/){target="_blank"} |
{{< fa box >}} [FactoMineR](http://factominer.free.fr/index_fr.html){target="_blank"} |
{{< fa box >}} [PCAmixdata](https://cran.r-project.org/web/packages/PCAmixdata/vignettes/PCAmixdata.html){target="_blank"} 

:::

{{< fa brands slideshare >}} Slides consultables ici : <br> [https://statire.github.io/bulledr/01-bonnes_pratiques/01-bonnes_pratiques.html](https://statire.github.io/bulledr/01-bonnes_pratiques/01-bonnes_pratiques.html){target="_blank"}

:::: {.columns}

::: {.column width="40%"}
::: {.callout-tip appearance="minimal"}
## Prochaines dates

:::: {.columns}

::: {.column width="50%"}
- 6 juin

- 4 juillet

- 1 août (date à confirmer)

- 5 septembre
:::

::: {.column width="50%"}
- 3 octobre

- 7 novembre

- 5 décembre
:::

::::


:::

:::

::: {.column width="60%"}

:::

::::





## Slides made with ...{.plain}

<center>

![](img/logo_hex.png){width=400px fig-align="center"}

{{< fa brands github >}} [https://github.com/davidcarayon/InraeThemes](https://github.com/davidcarayon/InraeThemes){target="_blank"}

</center>
